import React, { useState, useEffect } from "react";
import MusicalBigO from "./MusicalBigO";
import WaveformVisualizer from "./WaveformVisualizer";
import TransparentWaveOverlay from "./TransparentWaveOverlay";
import AnimatedAsciiArt from "./AnimatedAsciiArt";
import "./styles.css"; // Import our custom Bootstrap.386 CSS overrides

function App() {
  const [audioCtx, setAudioCtx] = useState(null);
  const [analyser, setAnalyser] = useState(null);
  const [theme, setTheme] = useState("default"); // Add theme state

  useEffect(() => {
    const ctx = new (window.AudioContext || window.webkitAudioContext)();
    const analyserNode = ctx.createAnalyser();
    analyserNode.fftSize = 2048;
    setAudioCtx(ctx);
    setAnalyser(analyserNode);
    
    // Apply the DOS theme to body
    document.body.setAttribute("data-bs-theme", "dos");
  }, []);

  // Function to toggle between themes
  const toggleTheme = () => {
    const newTheme = theme === "default" ? "green" : theme === "green" ? "amber" : "default";
    setTheme(newTheme);
    document.body.setAttribute("data-bs-theme", newTheme === "default" ? "dos" : newTheme);
  };
  
  return (
    <div className="container-fluid dosbox" style={{ backgroundColor: 'transparent', border: 'none', boxShadow: 'none', padding: 0, margin: 0 }}>
      {/* Everything must be wrapped inside this outermost div with transparent background */}
      <div className="row mb-3" style={{ margin: 0 }}>
        <div className="col-12 text-center">          {/* ASCII Art with React-based wave animation */}
          <div className="ascii-art-container">
            <pre style={{ fontSize: "clamp(6px, 1vw, 10px)", color: "white", padding: "0" }}>
              <AnimatedAsciiArt 
                asciiLines={[
                  "         ######                                                                                       ### ",
                  "      ##############  ################### ###################   ##########    ####################   ##################    #########    ############## ",
                  "    ######     #######  #######     ######  #######    ######## ##########      ####     ######         ####  ##########     ####     ################# ",
                  "  ######         ######  #####       ######  #####         ###### ##########    ####      #####         ####   ##########    ####    #####         ##### ",
                  "######          ###### #####       #####   #####          ##### #### ######   ####      #####         ####   #### ######   ####   ######           # ",
                  "   ######           ###### ################    #####          ##### ####   ######  ###      #####         ####   ####   ###### ####   ######            ### # ",
                  "   ######           ###### #############       #####          ##### ####    ##########      #####         ####   ####     #########   #####       ########### ",
                  "   #######          ###### #####   ######      #####          ##### ####     #########      #####         ####   ####      ########   ######        ###### ## ",
                  " ######          #####  #####    ######     #####         #####  ####       #######      #####         ###    ####      ########   ######        ###### ",
                  "  ######       ######  ######     #######   ######      #######  ####        ######       ######     #####    ####        ######    ######       ###### ",
                  "   #############################   ########################## ##########      #####       ################ ##########      #####     ################# ",
                  "##########     ##########          ##############         #######         ##          ##########      #####            ##       ########"
                ]} 
              />
            </pre>
          </div>

          <h1>Musical Big-O <span className="blink">_</span></h1>
          <button className="btn" onClick={toggleTheme}>Change Theme</button>
        </div>
      </div>
        {/* Main App content */}
      <div className="App" style={{ position: "relative", width: "100%", height: "100%", margin: 0, padding: 0 }}>
        {audioCtx && analyser && (
          <>
            {/* Background visualization */}
            <WaveformVisualizer audioCtx={audioCtx} analyser={analyser} />
          </>
        )}
        <MusicalBigO audioCtx={audioCtx} analyser={analyser} />
        {/* Transparent overlay waveform - placed in the same container for proper positioning */}
        {audioCtx && analyser && (
          <TransparentWaveOverlay audioCtx={audioCtx} analyser={analyser} />
        )}      
      </div>      {/* ASCII art displays - spaced appropriately */}
      <div className="ascii-art-container">
        <pre style={{ fontSize: "clamp(2px, 0.4vw, 4px)" }}
        >    {[
      "                                                                  ████   █  ███████████        ████████",
      "                                                 █████████████████████████████████████████████████████████████████",
      "                                        █████████████████████████████████████████████████████████████████████████████████",
      "                                      █████████████████████████████████████████████████████████████████████████████████████",
      "                                    ████████████████████████████████████████████████████████████████████████████████████████",
      "                                  ████████████████████████████████████████████████████████████████████████████████████████████",
      "                               █████████████████████████████████████████████████████████████████████████████████████████████████",
      "                             █████████████████████████████████████████████████████████████████████████████████████████████████████",
      "                      ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "                    ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "                  ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "            ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "         █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "       █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "      ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "      █████████████████   ██████       ████      █████      █████    ███████     ████████  ██████     █████      █████      █████ █████ █████████████████",
      "      █████████████████ █ ██████ █████████  ██████████ ████  ████ █████████ ████████████    ███████ ███████ ████  ███  █████ ████   ███ ██████████████████",
      "     █████████████████ ███ ████ ██████████ ███████████  █   █████     █████ ███████████ ███ ███████ ███████      ████  █████ ████    █  ██████████████████",
      "     ████████████████  ███  ███ █████  ███ █████  ████ ██   █████ █████████ ████  █████ ███  ██████ ███████ ██   ████  █████ ████ ██    ██████████████████",
      "     ████████████████  ████ ████ ████  ████ █████ ████ ████ █████ █████████ ████  ████  ████  █████ ███████ ████ █████  ███  ████ ███   ██████████████████",
      "     ███████████████  ██████ ██████    ██████    █████ █████ ████      ██████     ███████████ █████ █████████████ ██████   ██████ █████ ██████████████████",
      "     █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "      █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
      "      █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████  ",
      "       ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████   ",
      "        ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████   ",
      "         █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████    ",
      "         ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████     ",
      "          ███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████       ",
      "                   █████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                  ",
      "                   ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                 ",
      "                  ██████████████████████████████████████████████████████████   ██████████████████████████████████████████████████████████                 ",
      "                 ███████████████████████████████████████████████████████            █████████████████████████████████████████████████████                 ",
      "                 ██████████████████         █████████████       ███████████████████████              ███████████████████████  ███████████                 ",
      "                     ██████████             ███████████████     ████████████████████████             █████████████████        █████████                   ",
      "                      ███████               ██████  ███████    █████████████████    █████            ████████████████          ██████                     ",
      "                    ████████              ███████  █████████████████████████ █      ████          █████████████████            ███                      ",
      "                     █████████               ██████   ██████████████   █████   █       ██████      ████████████████████████ █████████                     ",
      "                      ██████████    █        ███████  ████████████  ███ ███████████   █████████    ████████████████████  ███████ ████                     ",
      "                       ██████████  ███        ███████ ██████████      ██████████████   ████████   █████████████████████████     ███                       ",
      "                      █████████████           ████████████████           █████           █████   █████████████████████████   ███████                     ",
      "                        █████████████              ██████████████         ███████           ███   ██████████████████████████ ████████                      ",
      "                        ██████   █ █████          ██████████████████                         ██  ██████████████████████████████████                       ",
      "                        ████      █████             ██████████████████                     ████   ████████████████████████   ██████                       ",
      "                        ██                            █ ███████████████                  ███      █████████ ██████████████       █                        ",
      "                        ██                            ██ ████████████████                         ███████████  ████████████                               ",
      "                         ███        ██ ██              █ █████████████████                        ████████████████ █████████                              ",
      "                          ████████████   ██████  ██    ████████████████████████████               ███████████████████████████████                         ",
      "                                         █████  ███    ██ ████████████████████████                ████████████████                                        ",
      "                                            █████      █  ██████████████████                      ███████████                                             ",
      "                                              ████████ ██ ██████████████                          ███████████                                             ",
      "                                                ██████ █████████████                              ████████                                               ",
    ].map((line, i) => (
      <span 
        key={i} 
        style={{ 
          display: "block",
          height: "auto", 
          lineHeight: "clamp(5px, 0.65vw, 6px)",
          fontSize: "clamp(4px, 0.5vw, 5px)",
          overflow: "visible",
          position: "relative"
        }}
      >
        {line}
      </span>
    ))}
  </pre>
</div>
<div className="ascii-art-container ascii-art-title">
  <pre style={{ fontSize: "clamp(3px, 0.5vw, 5px)" }}>{[
      "   /$$$         /$$$          /$$$$$$  /$$$$$$  /$$$$$$ /$$$$$$$         /$$$$$$  /$$$$$$  /$$$$$$ /$$$$$$$ /$$$$$$$$ /$$$$$$  /$$$$$$ /$$$$$$$$/$$$$$$$  /$$$$$$ /$$   /$$       /$$$$$$$ /$$$$$$$$ /$$$$$$  /$$$$$$ /$$$$$$$ /$$$$$$$  /$$$$$$                         ",
      "  /$$_/        |_  $$        /$$__  $$/$$$_  $$/$$__  $| $$____/        /$$__  $$/$$__  $$/$$__  $| $$__  $| $$_____//$$__  $$/$$__  $|__  $$__| $$__  $$/$$__  $| $$$ | $$      | $$__  $| $$_____//$$__  $$/$$__  $| $$__  $| $$__  $$/$$__  $$                        ",
      " /$$/   /$$$$$$$ \\  $$      |__/  \\ $| $$$\\ $|__/  \\ $| $$             | $$  \\ $| $$  \\__| $$  \\__| $$  \\ $| $$     | $$  \\__| $$  \\ $$  | $$  | $$  \\ $| $$  \\ $| $$$$| $$      | $$  \\ $| $$     | $$  \\__| $$  \\ $| $$  \\ $| $$  \\ $| $$  \\__/                        ",
      "| $$   /$$_____/  | $$        /$$$$$$| $$ $$ $$ /$$$$$$| $$$$$$$       | $$$$$$$| $$ /$$$| $$ /$$$| $$$$$$$| $$$$$  | $$ /$$$| $$$$$$$$  | $$  | $$$$$$$| $$  | $| $$ $$ $$      | $$$$$$$| $$$$$  | $$     | $$  | $| $$$$$$$| $$  | $|  $$$$$$                         ",
      "| $$  | $$        | $$       /$$____/| $$\\ $$$$/$$____/|_____  $$      | $$__  $| $$|_  $| $$|_  $| $$__  $| $$__/  | $$|_  $| $$__  $$  | $$  | $$__  $| $$  | $| $$  $$$$      | $$__  $| $$__/  | $$     | $$  | $| $$__  $| $$  | $$\\____  $$                        ",
      "|  $$ | $$        /$$/      | $$     | $$ \\ $$| $$      /$$  \\ $$      | $$  | $| $$  \\ $| $$  \\ $| $$  \\ $| $$     | $$  \\ $| $$  | $$  | $$  | $$  \\ $| $$  | $| $$\\  $$$      | $$  \\ $| $$     | $$    $| $$  | $| $$  \\ $| $$  | $$/$$  \\ $$                        ",
      " \\  $$|  $$$$$$$/$$$/       | $$$$$$$|  $$$$$$| $$$$$$$|  $$$$$$/      | $$  | $|  $$$$$$|  $$$$$$| $$  | $| $$$$$$$|  $$$$$$| $$  | $$  | $$  | $$  | $|  $$$$$$| $$ \\  $$      | $$  | $| $$$$$$$|  $$$$$$|  $$$$$$| $$  | $| $$$$$$$|  $$$$$$/                        ",
      "  \\___/\\_______|___/        |________/\\______/|________/\\______/       |__/  |__/\\______/ \\______/|__/  |__|________/\\______/|__/  |__/  |__/  |__/  |__/\\______/|__/  \\__/      |__/  |__|________/\\______/ \\______/|__/  |__|_______/ \\______/                        ",
      "                                                                                                                                                                                                                   ",
      "                                                                                                                                                                                                                   ",
      "                                                                                                                                                                                                                   ",
    ].map((line, i) => (
      <span key={i} style={{ 
        display: "block", 
        height: "auto",
        overflow: "visible", 
        fontSize: "clamp(3px, 0.5vw, 5px)",
        lineHeight: "clamp(6px, 0.8vw, 8px)"
      }}>
        {line}
      </span>
    ))}
  </pre>
</div>

<div className="ascii-art-container">
  <pre style={{ fontSize: "clamp(2px, 0.4vw, 4px)" }}
  >    {[
      "         o                             o                                                o                                           o        o                          o     o    o           o                                  o                  o   ",
      "        <|>                          _<|>_                                             <|>                                         <|>      <|>                       _<|>_  <|>  <|>         <|>                               _<|>_              _<|>_ ",
      "        < \\                                                                            < \\                                         < \\      / >                              / \\  < >         / >                                                        ",
      "   o__ __o/    o__  __o       __o__    o      o__ __o/  \\o__ __o     o__  __o     o__ __o/             o__ __o/  \\o__ __o     o__ __o/      \\o__ __o      o       o     o    \\o/   |          \\o__ __o     o      o               o    \\o__ __o      o   ",
      "  /v     |    /v      |>     />  \\    <|>    /v     |    |     |>   /v      |>   /v     |             /v     |    |     |>   /v     |        |     v\\    <|>     <|>   <|>    |    o__/_       |     v\\   <|>    <|>             <|>    |     |>    <|>  ",
      " />     / \\  />      //      \\o       / \\   />     / \\  / \\   / \\  />      //   />     / \\           />     / \\  / \\   / \\  />     / \\      / \\     <\\   < >     < >   / \\   / \\   |          / \\     <\\  < >    < >             / \\   / \\   < >    / \\  ",
      " \\      \\o/  \\o    o/         v\\      \\o/   \\      \\o/  \\o/   \\o/  \\o    o/     \\      \\o/           \\      \\o/  \\o/   \\o/  \\      \\o/      \\o/      /    |       |    \\o/   \\o/   |          \\o/      /   \\o    o/              \\o/   \\o/          \\o/  ",
      "  o      |    v\\  /v __o       <\\      |     o      |    |     |    v\\  /v __o   o      |             o      |    |     |    o      |        |      o     o       o     |     |    o           |      o     v\\  /v                |     |            |   ",
      "  <\\__  / \\    <\\/ > __/>  _\\o__</     / \\    <\\__  < >  / \\   / \\    <\\/ > __/>   <\\__  / \\            <\\__  / \\  / \\   / \\   <\\__  / \\      / \\  __/>     <\\__ __/>    / \\   / \\   <\\__       / \\  __/>      <\\/ >                < >   / \\          < >  ",
      "                                                    |                                                                                                                                                         /                   |                  |   ",
      "                                            o__     o                                                                                                                                                        o            o__     o          o__     o   ",
      "                                            <\\__ __/>                                                                                                                                                     __/>            <\\__ __/>          <\\__ __/>  ",
    ].map((line, i) => (
      <span key={i} style={{ 
        display: "block", 
        height: "auto",
        overflow: "visible", 
        fontSize: "clamp(2px, 0.4vw, 4px)",
        lineHeight: "clamp(3px, 0.5vw, 5px)"
      }}>
        {line}
      </span>
    ))}
  </pre>
</div>


    </div>
  );
}

export default App;
